scale_y_continuous(breaks=0:20*4) +         # Set tick every 4
theme_bw() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))
rx = r[r$lang %in% unique(r$lang)[1],]
ggplot(rx, aes(x=line, y=Read.mean, colour=lang, group=lang)) +
geom_errorbar(aes(ymin=Read.mean-Read.sd, ymax=Read.mean+Read.sd), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("File") +
ylab("Read Time (ms)") +
scale_colour_hue(name="Supplement type",    # Legend label, use darker colors
breaks=c("OJ", "VC"),
labels=c("Orange juice", "Ascorbic acid"),
l=40) +                    # Use darker colors, lightness=40
ggtitle("The Effect of Vitamin C on\nTooth Growth in Guinea Pigs") +
expand_limits(y=0) +                        # Expand y range
scale_y_continuous(breaks=0:20*4) +         # Set tick every 4
theme_bw() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))
ggplot(rx, aes(x=line, y=Read.mean, colour=lang, group=lang)) +
geom_errorbar(aes(ymin=Read.mean-Read.sd, ymax=Read.mean+Read.sd), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab("Read Time (ms)") +
ggtitle(sprintf("Reading time of language %s", unique(rx$lang))) +
expand_limits(y=0) +                        # Expand y range
#scale_y_continuous(breaks=0:20*4) +         # Set tick every 4
theme_bw() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))
ggplot(rx, aes(x=line, y=Read.mean, colour=lang, group=lang)) +
geom_errorbar(aes(ymin=Read.mean-Read.sd, ymax=Read.mean+Read.sd), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab("Read Time (ms)") +
ggtitle(sprintf("Reading time of language %s", unique(rx$lang))) +
expand_limits(y=0) +                        # Expand y range
#scale_y_continuous(breaks=0:20*4) +         # Set tick every 4
theme_bw()# +
ggplot(rx, aes(x=line, y=Read.mean, colour=lang, group=lang)) +
geom_errorbar(aes(ymin=Read.mean-Read.sd, ymax=Read.mean+Read.sd), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab("Read Time (ms)") +
ggtitle(sprintf("Reading time of languages")) +
expand_limits(y=0) +                        # Expand y range
#scale_y_continuous(breaks=0:20*4) +         # Set tick every 4
theme_bw()# +
ggplot(r, aes(x=line, y=Read.mean, colour=lang, group=lang)) +
geom_errorbar(aes(ymin=Read.mean-Read.sd, ymax=Read.mean+Read.sd), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab("Read Time (ms)") +
ggtitle(sprintf("Reading time of languages")) +
expand_limits(y=0) +                        # Expand y range
#scale_y_continuous(breaks=0:20*4) +         # Set tick every 4
theme_bw()# +
rx = r[r$lang %in% unique(r$lang)[2],]
ggplot(rx, aes(x=line, y=Read.mean, colour=lang, group=lang)) +
geom_errorbar(aes(ymin=Read.mean-Read.sd, ymax=Read.mean+Read.sd), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab("Read Time (ms)") +
ggtitle(sprintf("Reading time of languages")) +
expand_limits(y=0) +                        # Expand y range
#scale_y_continuous(breaks=0:20*4) +         # Set tick every 4
theme_bw()# +
ggplot(rx, aes(x=line, y=Read.mean, colour=lang, group=lang)) +
geom_errorbar(aes(ymin=Read.mean-Read.sd, ymax=Read.mean+Read.sd), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab("Read Time (ms)") +
ggtitle(sprintf("Reading time of languages")) +
expand_limits(y=0) +                        # Expand y range
theme_bw()
write.csv(r, "LanguageResult.csv", sep = ",")
copia = r
r = read.csv("LanguageResult.csv", sep = ",")
r
r = read.csv("LanguageResult.csv", sep = ",", row.names = F)
r$X = NULL
write.csv(r, "LanguageResult.csv", sep = ",", row.names = F)
r = read.csv("LanguageResult.csv", sep = ",", row.names = F)
r = read.csv("LanguageResult.csv", sep = ",")
r
rx = r[r$lang %in% unique(r$lang)[3],]
ggplot(rx, aes(x=line, y=Read.mean, colour=lang, group=lang)) +
geom_errorbar(aes(ymin=Read.mean-Read.sd, ymax=Read.mean+Read.sd), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab("Read Time (ms)") +
ggtitle(sprintf("Reading time of languages")) +
expand_limits(y=0) +                        # Expand y range
theme_bw()
rx = r[r$lang %in% unique(r$lang)[4],]
ggplot(rx, aes(x=line, y=Read.mean, colour=lang, group=lang)) +
geom_errorbar(aes(ymin=Read.mean-Read.sd, ymax=Read.mean+Read.sd), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab("Read Time (ms)") +
ggtitle(sprintf("Reading time of languages")) +
expand_limits(y=0) +                        # Expand y range
theme_bw()
rx = r[r$lang %in% unique(r$lang)[5],]
ggplot(rx, aes(x=line, y=Read.mean, colour=lang, group=lang)) +
geom_errorbar(aes(ymin=Read.mean-Read.sd, ymax=Read.mean+Read.sd), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab("Read Time (ms)") +
ggtitle(sprintf("Reading time of languages")) +
expand_limits(y=0) +                        # Expand y range
theme_bw()
rx = r[r$lang %in% unique(r$lang)[6],]
ggplot(rx, aes(x=line, y=Read.mean, colour=lang, group=lang)) +
geom_errorbar(aes(ymin=Read.mean-Read.sd, ymax=Read.mean+Read.sd), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab("Read Time (ms)") +
ggtitle(sprintf("Reading time of languages")) +
expand_limits(y=0) +                        # Expand y range
theme_bw()
rx = r[r$lang %in% unique(r$lang)[7],]
ggplot(rx, aes(x=line, y=Read.mean, colour=lang, group=lang)) +
geom_errorbar(aes(ymin=Read.mean-Read.sd, ymax=Read.mean+Read.sd), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab("Read Time (ms)") +
ggtitle(sprintf("Reading time of languages")) +
expand_limits(y=0) +                        # Expand y range
theme_bw()
rx = r[r$lang %in% unique(r$lang)[8],]
ggplot(rx, aes(x=line, y=Read.mean, colour=lang, group=lang)) +
geom_errorbar(aes(ymin=Read.mean-Read.sd, ymax=Read.mean+Read.sd), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab("Read Time (ms)") +
ggtitle(sprintf("Reading time of languages")) +
expand_limits(y=0) +                        # Expand y range
theme_bw()
rx = r[r$lang %in% unique(r$lang)[9],]
ggplot(rx, aes(x=line, y=Read.mean, colour=lang, group=lang)) +
geom_errorbar(aes(ymin=Read.mean-Read.sd, ymax=Read.mean+Read.sd), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab("Read Time (ms)") +
ggtitle(sprintf("Reading time of languages")) +
expand_limits(y=0) +                        # Expand y range
theme_bw()
names(rx)
rx = r[r$lang %in% unique(r$lang)[8],]
ggplot(rx, aes(x=line, y=SummaryAnalyse.mean, colour=lang, group=lang)) +
geom_errorbar(aes(ymin=SummaryAnalyse.mean-SummaryAnalyse.sd, ymax=SummaryAnalyse.mean+SummaryAnalyse.sd), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab("Read Time (ms)") +
ggtitle(sprintf("Reading time of languages")) +
expand_limits(y=0) +                        # Expand y range
theme_bw()
rx = r[r$lang %in% unique(r$lang)[1],]
ggplot(rx, aes(x=line, y=SummaryAnalyse.mean, colour=lang, group=lang)) +
geom_errorbar(aes(ymin=SummaryAnalyse.mean-SummaryAnalyse.sd, ymax=SummaryAnalyse.mean+SummaryAnalyse.sd), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab("Read Time (ms)") +
ggtitle(sprintf("Reading time of languages")) +
expand_limits(y=0) +                        # Expand y range
theme_bw()
rx = r[r$lang %in% unique(r$lang)[2],]
ggplot(rx, aes(x=line, y=SummaryAnalyse.mean, colour=lang, group=lang)) +
geom_errorbar(aes(ymin=SummaryAnalyse.mean-SummaryAnalyse.sd, ymax=SummaryAnalyse.mean+SummaryAnalyse.sd), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab("Read Time (ms)") +
ggtitle(sprintf("Reading time of languages")) +
expand_limits(y=0) +                        # Expand y range
theme_bw()
rx = r[r$lang %in% unique(r$lang)[7],]
ggplot(rx, aes(x=line, y=SummaryAnalyse.mean, colour=lang, group=lang)) +
geom_errorbar(aes(ymin=SummaryAnalyse.mean-SummaryAnalyse.sd, ymax=SummaryAnalyse.mean+SummaryAnalyse.sd), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab("Read Time (ms)") +
ggtitle(sprintf("Reading time of languages")) +
expand_limits(y=0) +                        # Expand y range
theme_bw()
rx = r[r$lang %in% unique(r$lang)[8],]
ggplot(rx, aes(x=line, y=SummaryAnalyse.mean, colour=lang, group=lang)) +
geom_errorbar(aes(ymin=SummaryAnalyse.mean-SummaryAnalyse.sd, ymax=SummaryAnalyse.mean+SummaryAnalyse.sd), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab("Read Time (ms)") +
ggtitle(sprintf("Reading time of languages")) +
expand_limits(y=0) +                        # Expand y range
theme_bw()
resultFiles = list.files(d, full.names = T, pattern = ".json")
d = sprintf("%s/tmp", getwd())
resultFiles = list.files(d, full.names = T, pattern = ".json")
require(rjson)
arq = resultFiles[1]
a = fromJSON(file = arq)
View(a)
require(ggplot2)
r = read.csv("LanguageResult.csv", sep = ",")
pd = position_dodge(0.1)
rx = r[r$lang %in% unique(r$lang)[1],]
rx
ggplot(rx, aes(x=line, y=SummaryAnalyse.mean, colour=lang, group=lang)) +
geom_errorbar(aes(ymin=SummaryAnalyse.mean-SummaryAnalyse.sd, ymax=SummaryAnalyse.mean+SummaryAnalyse.sd), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab("Read Time (ms)") +
ggtitle(sprintf("Reading time of languages")) +
expand_limits(y=0) +                        # Expand y range
theme_bw()
1:10
x = 1:10
sd(x)
mean(x)
mean(x) + (sd(x) * -1:1)
names(rx)
rx["id"]
drawScatter = function(dt, meanCol, sdCol, variable) {
pd = position_dodge(0.1)
ggplot(dt, aes(x=line, y=dt[meanCol], colour=lang, group=lang)) +
geom_errorbar(aes(ymin=dt[meanCol]-dt[sdCol], ymax=dt[meanCol]+dt[sdCol]), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab(sprintf("%s Time (ms)", variable)) +
ggtitle(sprintf("Analysis for %s", unique(r$lang))) +
expand_limits(y=0) +                        # Expand y range
theme_bw()
}
names(rx)
drawScatter(rx, "Read.mean", "Read.sd")
drawScatter(rx, "Read.mean", "Read.sd", "Read")
drawScatter(rx, "LanguageAnalyse.mean", "LanguageAnalyse.sd", "Language sort")
rx = r[r$lang %in% unique(r$lang)[1:2],]
drawScatter = function(dt, meanCol, sdCol, variable) {
pd = position_dodge(0.1)
ggplot(dt, aes(x=line, y=dt[meanCol], colour=lang, group=lang)) +
geom_errorbar(aes(ymin=dt[meanCol]-dt[sdCol], ymax=dt[meanCol]+dt[sdCol]), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab(sprintf("%s Time (ms)", variable)) +
ggtitle(sprintf("Analysis for %s", unique(r$lang))) +
expand_limits(y=0) +                        # Expand y range
theme_bw()
}
drawScatter(rx, "LanguageAnalyse.mean", "LanguageAnalyse.sd", "Language sort")
arq = resultFiles
arq
arq = resultFiles[2]
a = fromJSON(file = arq)
View(a)
rx = r[r$lang %in% unique(r$lang)[2:3],]
drawScatter(rx, "LanguageAnalyse.mean", "LanguageAnalyse.sd", "Language sort")
rx = r[r$lang %in% unique(r$lang)[c(2,3,7)],]
drawScatter(rx, "LanguageAnalyse.mean", "LanguageAnalyse.sd", "Language sort")
rx = r[r$lang %in% unique(r$lang)[c(2,3,8)],]
drawScatter(rx, "LanguageAnalyse.mean", "LanguageAnalyse.sd", "Language sort")
drawScatter(rx, "SummaryAnalyse.mean", "SummaryAnalyse.sd", "Summaryse data")
drawScatter = function(dt, meanCol, sdCol, variable) {
pd = position_dodge(0.1)
ggplot(dt, aes(x=line, y=dt[meanCol], colour=lang, group=lang)) +
geom_errorbar(aes(ymin=dt[meanCol]-dt[sdCol], ymax=dt[meanCol]+dt[sdCol]), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab(sprintf("%s Time (ms)", variable)) +
ggtitle(sprintf("Analysis for %s in %s",variable, unique(r$lang))) +
expand_limits(y=0) +                        # Expand y range
theme_bw()
}
drawScatter(rx, "SummaryAnalyse.mean", "SummaryAnalyse.sd", "Summaryse data")
r = read.csv("LanguageResult.csv", sep = ",")
drawScatter = function(dt, meanCol, sdCol, variable) {
pd = position_dodge(0.1)
ggplot(dt, aes(x=line, y=dt[meanCol], colour=lang, group=lang)) +
geom_errorbar(aes(ymin=dt[meanCol]-dt[sdCol], ymax=dt[meanCol]+dt[sdCol]), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab(sprintf("%s Time (ms)", variable)) +
ggtitle(sprintf("Analysis for %s in %s",variable, unique(r$lang))) +
expand_limits(y=0) +                        # Expand y range
theme_bw()
}
i = unique(r$lang)[1]
rx = r[r$lang == i,]
names(rx)
grep(".mean", names(rx))
grep(c(".mean", ".sd") , names(rx))
gmean = grep(".mean" , names(rx))
gmean = grep(".mean" , names(rx))
gsd = grep(".sd", names(rx))
mean.name = names(rx)[gmean]
sd.name = names(rx)[gsd]
j = 1
drawScatter(rx, mean.name[j], sd.name[j], "Summaryse data")
require(ggplot2)
drawScatter = function(dt, meanCol, sdCol, variable) {
pd = position_dodge(0.1)
ggplot(dt, aes(x=line, y=dt[meanCol], colour=lang, group=lang)) +
geom_errorbar(aes(ymin=dt[meanCol]-dt[sdCol], ymax=dt[meanCol]+dt[sdCol]), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab(sprintf("%s Time (ms)", variable)) +
ggtitle(sprintf("Analysis for %s in %s",variable, unique(r$lang))) +
expand_limits(y=0) +                        # Expand y range
theme_bw()
}
mean.name = names(rx)[gmean]
sd.name = names(rx)[gsd]
drawScatter(rx, mean.name[j], sd.name[j], "Summaryse data")
names(rx)
mean.name
n = strsplit(sd.name[j], split = "\\.")[[1]][1]
drawScatter(rx, mean.name[j], sd.name[j], sprintf("%s data", n))
for(i in unique(r$lang)) {
rx = r[r$lang == i,]
gmean = grep(".mean" , names(rx))
gsd = grep(".sd", names(rx))
mean.name = names(rx)[gmean]
sd.name = names(rx)[gsd]
for(j in 1:length(sd.name)) {
n = strsplit(sd.name[j], split = "\\.")[[1]][1]
drawScatter(rx, mean.name[j], sd.name[j], sprintf("%s data", n))
}
}
drawScatter = function(dt, meanCol, sdCol, variable) {
pd = position_dodge(0.1)
p = ggplot(dt, aes(x=line, y=dt[meanCol], colour=lang, group=lang)) +
geom_errorbar(aes(ymin=dt[meanCol]-dt[sdCol], ymax=dt[meanCol]+dt[sdCol]), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab(sprintf("%s Time (ms)", variable)) +
ggtitle(sprintf("Analysis for %s in %s",variable, unique(r$lang))) +
expand_limits(y=0) +                        # Expand y range
theme_bw()
return(p)
}
pl = drawScatter(rx, mean.name[j], sd.name[j], sprintf("%s data", n))
pl
plot(pl)
for(i in unique(r$lang)) {
rx = r[r$lang == i,]
gmean = grep(".mean" , names(rx))
gsd = grep(".sd", names(rx))
mean.name = names(rx)[gmean]
sd.name = names(rx)[gsd]
for(j in 1:length(sd.name)) {
n = strsplit(sd.name[j], split = "\\.")[[1]][1]
pl = drawScatter(rx, mean.name[j], sd.name[j], sprintf("%s data", n))
png(filename = sprintf("./plots/%s_%s.png", i, n))
plot(pl)
dev.off()
}
}
require(ggplot2)
drawScatter = function(dt, meanCol, sdCol, variable) {
pd = position_dodge(0.1)
p = ggplot(dt, aes(x=line, y=dt[meanCol], colour=lang, group=lang)) +
geom_errorbar(aes(ymin=dt[meanCol]-dt[sdCol], ymax=dt[meanCol]+dt[sdCol]), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab(sprintf("%s Time (ms)", variable)) +
ggtitle(sprintf("Analysis for %s in %s",variable, unique(r$lang))) +
expand_limits(y=0) +                        # Expand y range
theme_bw()
return(p)
}
r = read.csv("LanguageResult.csv", sep = ",")
#for(i in unique(r$lang)) {
#  rx = r[r$lang == i,]
gmean = grep(".mean" , names(r))
gsd = grep(".sd", names(r))
mean.name = names(r)[gmean]
sd.name = names(r)[gsd]
j = 1
n = strsplit(sd.name[j], split = "\\.")[[1]][1]
pl = drawScatter(rx, mean.name[j], sd.name[j], sprintf("%s data", n))
pl = drawScatter(r, mean.name[j], sd.name[j], sprintf("%s data", n))
plot(pl)
j = 2
n = strsplit(sd.name[j], split = "\\.")[[1]][1]
pl = drawScatter(r, mean.name[j], sd.name[j], sprintf("%s data", n))
plot(pl)
i = unique(r$lang)[1]
rx = r[r$lang == i,]
gmean = grep(".mean" , names(rx))
gsd = grep(".sd", names(rx))
mean.name = names(rx)[gmean]
sd.name = names(rx)[gsd]
n = strsplit(sd.name[j], split = "\\.")[[1]][1]
pl = drawScatter(rx, mean.name[j], sd.name[j], sprintf("%s data", n))
par(mfrow = c(5,1))
plot(pl)
plot(pl)
plot(pl)
for(j in 1:length(sd.name)) {
n = strsplit(sd.name[j], split = "\\.")[[1]][1]
pl = drawScatter(rx, mean.name[j], sd.name[j], sprintf("%s data", n))
#png(filename = sprintf("./plots/%s_%s.png", i, n))
par(mfrow = c(5,1))
plot(pl)
#dev.off()
}
par(mfrow = c(5,1))
pl = drawScatter(rx, mean.name[j], sd.name[j], sprintf("%s data", n))
pl = drawScatter(rx, mean.name[j], sd.name[j], sprintf("%s data", n))
#png(filename = sprintf("./plots/%s_%s.png", i, n))
plot(pl)
drawScatter(rx, mean.name[j], sd.name[j], sprintf("%s data", n))
par(mfrow = c(5,1))
drawScatter(rx, mean.name[j], sd.name[j], sprintf("%s data", n))
drawScatter(rx, mean.name[j], sd.name[j], sprintf("%s data", n))
drawScatter = function(dt, meanCol, sdCol, variable) {
pd = position_dodge(0.1)
p = ggplot(dt, aes(x=line, y=dt[meanCol], colour=lang, group=lang)) +
geom_errorbar(aes(ymin=dt[meanCol]-dt[sdCol], ymax=dt[meanCol]+dt[sdCol]), colour="black", width=.1, position=pd) +
geom_curve(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab(sprintf("%s Time (ms)", variable)) +
ggtitle(sprintf("Analysis for %s in %s",variable, unique(r$lang))) +
expand_limits(y=0) +                        # Expand y range
theme_bw()
return(p)
}
require(ggplot2)
drawScatter = function(dt, meanCol, sdCol, variable) {
pd = position_dodge(0.1)
p = ggplot(dt, aes(x=line, y=dt[meanCol], colour=lang, group=lang)) +
geom_errorbar(aes(ymin=dt[meanCol]-dt[sdCol], ymax=dt[meanCol]+dt[sdCol]), colour="black", width=.1, position=pd) +
geom_curve(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab(sprintf("%s Time (ms)", variable)) +
ggtitle(sprintf("Analysis for %s in %s",variable, unique(r$lang))) +
expand_limits(y=0) +                        # Expand y range
theme_bw()
return(p)
}
r = read.csv("LanguageResult.csv", sep = ",")
i = unique(r$lang)[1]
j 1
j =1
rx = r[r$lang == i,]
gmean = grep(".mean" , names(rx))
gsd = grep(".sd", names(rx))
mean.name = names(rx)[gmean]
sd.name = names(rx)[gsd]
n = strsplit(sd.name[j], split = "\\.")[[1]][1]
pl = drawScatter(rx, mean.name[j], sd.name[j], sprintf("%s data", n))
plot(pl)
drawScatter = function(dt, meanCol, sdCol, variable) {
pd = position_dodge(0.1)
p = ggplot(dt, aes(x=line, y=dt[meanCol], colour=lang, group=lang)) +
geom_errorbar(aes(ymin=dt[meanCol]-dt[sdCol], ymax=dt[meanCol]+dt[sdCol]), colour="black", width=.1, position=pd) +
geom_bar(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab(sprintf("%s Time (ms)", variable)) +
ggtitle(sprintf("Analysis for %s in %s",variable, unique(r$lang))) +
expand_limits(y=0) +                        # Expand y range
theme_bw()
return(p)
}
pl = drawScatter(rx, mean.name[j], sd.name[j], sprintf("%s data", n))
plot(pl)
drawScatter = function(dt, meanCol, sdCol, variable) {
pd = position_dodge(0.1)
p = ggplot(dt, aes(x=line, y=dt[meanCol], colour=lang, group=lang)) +
geom_errorbar(aes(ymin=dt[meanCol]-dt[sdCol], ymax=dt[meanCol]+dt[sdCol]), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Line ammount") +
ylab(sprintf("%s Time (ms)", variable)) +
ggtitle(sprintf("Analysis for %s in %s",variable, unique(r$lang))) +
expand_limits(y=0) +                        # Expand y range
theme_bw()
return(p)
}
pl = drawScatter(rx, mean.name[j], sd.name[j], sprintf("%s data", n))
plot(pl)
getwd()
